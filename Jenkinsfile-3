pipeline {
  agent any

  options {
    buildDiscarder(logRotator(numToKeepStr: '5'))
  }

  stages {
    stage('Scan') {
      steps {
        // withSonarQubeEnv(installationName: 'sq2') { 
        //   sh './mvnw clean org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.0.2155:sonar'
        // }
        // withSonarQubeEnv { 
        //   sh 'mvn clean org.sonarsource.scanner.maven:sonar-maven-plugin:sonar'
        // }
        withSonarQubeEnv(installationName: 'sq1') { 
          sh 'mvn clean org.sonarsource.scanner.maven:sonar-maven-plugin:sonar'
        }
        // sh 'mvn clean org.sonarsource.scanner.maven:sonar-maven-plugin:sonar'
      }
    }
    stage("Quality Gate") {
      steps {
        timeout(time: 2, unit: 'MINUTES') {
          waitForQualityGate abortPipeline: true
        }
      }
    }
  }
}